---
interface Props {
  headings: any[];
}

const { headings } = Astro.props;

// Only include depth 1 (e.g., "# Heading") in TOC
const tocHeadings = headings.filter((h: any) => h.depth === 1);
---

{tocHeadings.length > 0 && (
  <div class="toc-left fixed top-24 left-4 hidden lg:block z-50">
    <div class="glass rounded-xl p-6 w-60">
      <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Table of Contents</h3>
      <nav class="space-y-2">
        {tocHeadings.map((heading) => (
          <a 
            href={`#${heading.slug}`}
            class="toc-link block text-sm font-medium text-gray-900 dark:text-white hover:text-primary-600 dark:hover:text-primary-400 transition-colors py-1"
            data-heading={heading.slug}
          >
            {heading.text}
          </a>
        ))}
      </nav>
    </div>
  </div>
)}

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const progressBar = document.getElementById('reading-progress');
    const tocLinks = document.querySelectorAll('.toc-link');
    const headings = document.querySelectorAll('h1'); // Only track h1

    function updateReadingProgress() {
      const winHeight = window.innerHeight;
      const docHeight = document.documentElement.scrollHeight;
      const scrollTop = window.pageYOffset;
      const trackLength = docHeight - winHeight;
      const pctScrolled = Math.floor((scrollTop / trackLength) * 100);

      if (progressBar) {
        progressBar.style.width = pctScrolled + '%';
      }
    }

    function updateTOC() {
      let current = '';

      headings.forEach((heading) => {
        const rect = heading.getBoundingClientRect();
        if (rect.top <= 100) {
          current = heading.id;
        }
      });

      tocLinks.forEach((link) => {
        link.classList.remove('text-primary-600', 'dark:text-primary-400', 'font-medium');
        if (link.getAttribute('data-heading') === current) {
          link.classList.add('text-primary-600', 'dark:text-primary-400', 'font-medium');
        }
      });
    }

    window.addEventListener('scroll', () => {
      updateReadingProgress();
      updateTOC();
    });

    updateReadingProgress();
    updateTOC();
  });
</script>

<style>
  /* Optional: add a small shadow to make TOC pop on left side */
  .toc-left {
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  }
</style>
