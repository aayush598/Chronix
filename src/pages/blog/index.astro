---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import SearchAndFilter from '../../components/SearchAndFilter.astro';

// Get all blog posts
const posts = await Astro.glob('../../content/blog/*.md');

// Sort by publication date (newest first)
const sortedPosts = posts.sort((a, b) => 
  new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
);

// Get unique categories
const categories = [...new Set(posts.map(post => post.frontmatter.category))];
---

<Layout title="All Articles - Chronix" description="Browse all technical articles covering web development, DevOps, and modern programming practices.">
  <link rel="stylesheet" href="/src/styles/global.css" />
  
  <Header />
  
  <main class="min-h-screen bg-white dark:bg-gray-900">
    <!-- Page Header -->
    <section class="bg-gradient-to-br from-primary-50 to-accent-50 dark:from-gray-900 dark:to-gray-800 pt-24 pb-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center">
          <h1 class="text-4xl sm:text-5xl font-bold text-gray-900 dark:text-white mb-6">
            All Articles
          </h1>
          <p class="text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
            Explore our complete collection of technical articles, tutorials, and insights
          </p>
          <div class="mt-8 text-sm text-gray-500 dark:text-gray-400">
            {sortedPosts.length} articles published
          </div>
        </div>
      </div>
    </section>

    <!-- Search and Filter -->
    <section class="py-12 bg-white dark:bg-gray-900">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <SearchAndFilter />
      </div>
    </section>

    <!-- Articles Grid -->
    <section class="pb-20 bg-white dark:bg-gray-900">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div id="posts-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {sortedPosts.map((post) => (
            <article class="group relative overflow-hidden rounded-2xl border border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-800/50 shadow-sm hover:shadow-xl transition-all duration-300">
              <a href={post.url} class="block">
                <div class="p-6">
                  <div class="flex items-center justify-between mb-4">
                    <div class="flex items-center space-x-2">
                      <span class="px-3 py-1 text-xs font-medium bg-primary-100 dark:bg-primary-900/30 text-primary-600 dark:text-primary-400 rounded-full">
                        {post.frontmatter.category}
                      </span>
                      <span class="text-sm text-gray-500 dark:text-gray-400">
                        {post.frontmatter.readTime} min read
                      </span>
                    </div>
                    {post.frontmatter.version && (
                      <span class="text-xs text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">
                        v{post.frontmatter.version}
                      </span>
                    )}
                  </div>

                  <h3 class="text-xl font-bold text-gray-900 dark:text-white group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors mb-3">
                    {post.frontmatter.title}
                  </h3>
                  
                  <p class="text-sm text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">
                    {post.frontmatter.description}
                  </p>

                  <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-3">
                      <div class="w-8 h-8 bg-gradient-to-br from-primary-500 to-accent-500 rounded-full flex items-center justify-center">
                        <span class="text-white text-sm font-medium">
                          {post.frontmatter.author.name.charAt(0)}
                        </span>
                      </div>
                      <div>
                        <p class="text-sm font-medium text-gray-900 dark:text-white">{post.frontmatter.author.name}</p>
                        <p class="text-xs text-gray-500 dark:text-gray-400">{post.frontmatter.pubDate}</p>
                      </div>
                    </div>
                    
                    <div class="flex items-center space-x-4 text-gray-500 dark:text-gray-400">
                      <div class="flex items-center space-x-1">
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z"></path>
                        </svg>
                        <span class="text-xs">{post.frontmatter.likes || 0}</span>
                      </div>
                      <div class="flex items-center space-x-1">
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z"></path>
                        </svg>
                        <span class="text-xs">{post.frontmatter.shares || 0}</span>
                      </div>
                    </div>
                  </div>
                </div>
              </a>
            </article>
          ))}
        </div>
      </div>
    </section>
  </main>
</Layout>

<script>
  // Export posts data for search functionality
  const posts = [
    ...Array.from({length: 5}).map((_, i) => ({
      frontmatter: {
        title: `Sample Post ${i + 1}`,
        description: `This is a description for sample post ${i + 1}`,
        category: ['JavaScript', 'React', 'Node.js', 'DevOps', 'Web Development'][i],
        readTime: Math.floor(Math.random() * 15) + 5,
        author: { name: 'Author Name' },
        pubDate: '2024-01-15',
        likes: Math.floor(Math.random() * 100),
        shares: Math.floor(Math.random() * 50),
        version: '1.0'
      },
      url: `/blog/sample-post-${i + 1}`
    }))
  ];
  
  // Make posts available globally for search
  window.__BLOG_POSTS__ = posts;
</script>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>